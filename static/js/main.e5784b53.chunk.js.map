{"version":3,"sources":["utils/fetchClient.ts","types/SortType.ts","api/users.ts","components/Auth/AuthForm.tsx","components/Auth/AuthContext.tsx","components/TodoFooter/TodoFooter.tsx","types/ErrorType.ts","components/TodoError/TodoError.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","ok","Error","json","SortType","client","getUserByEmail","email","a","users","createUser","name","AuthForm","onLogin","useState","setEmail","setName","needToRegister","setNeedToRegister","loading","setLoading","errorMessage","setErrorMessage","saveUser","user","localStorage","setItem","useEffect","userData","getItem","parse","error","loadUser","handleSubmit","event","preventDefault","onSubmit","className","htmlFor","classNames","type","id","placeholder","disabled","value","required","onChange","e","target","minLength","AuthContext","React","createContext","AuthProvider","children","setUser","Provider","ErrorType","TodoFooter","todos","sortType","setSortType","clearComplited","itemsLeft","useMemo","counter","forEach","todo","completed","data-cy","href","selected","default","onClick","active","length","TodoError","currentError","setCurrentError","closeErrorMsgHandler","noError","errorMsg","whenEmptyTitle","whenAddTodo","whenDeleteTodo","whenChangeStatus","whenChangeTitle","App","useContext","newTodoField","useRef","editField","setTodos","inputText","setInputtext","loadingTodosId","setLoadingTodosId","isDoubleClicked","setIsDoubleCliked","selectedTodoId","setSelectedTodoId","todoInputText","setTodoInputText","currentSortType","setCurrentSortType","userId","newTodos","visibleTodos","filter","allTodosStatus","some","newTodoAddHandler","Math","random","trim","newTodo","title","prev","currTodos","returnedTodo","currtodos","map","prepTodo","catch","finally","curr","changeTodoStatusHandler","todosId","changeTodoStatus","currTodo","deleteTodoHandler","deleteTodo","resetTodoEditPreferences","key","changeTodoTitleHandler","changeTodoTitle","current","focus","ref","checked","onBlur","onKeyDown","onDoubleClick","includes","Root","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.e5784b53.chunk.js","sourcesContent":["const BASE_URL = 'https://mate.academy/students-api';\n\n// a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // we wait for testing purpose to see loaders\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","// eslint-disable-next-line no-shadow\nexport enum SortType {\n  default,\n  active,\n  completed,\n}\n","import { User } from '../types/User';\nimport { client } from '../utils/fetchClient';\n\nexport const getUserByEmail = async (email: string) => {\n  const users = await client.get<User[]>(`/users?email=${email}`);\n\n  return users[0] || null;\n};\n\ntype UserData = Pick<User, 'name' | 'email'>;\n\nexport const createUser = async ({ email, name }: UserData) => {\n  return client.post<User>('/users', { email, name });\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { createUser, getUserByEmail } from '../../api/users';\nimport { User } from '../../types/User';\n\nexport type Props = {\n  onLogin: (user: User) => void,\n};\n\nexport const AuthForm: React.FC<Props> = ({ onLogin }) => {\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [needToRegister, setNeedToRegister] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const saveUser = (user: User) => {\n    localStorage.setItem('user', JSON.stringify(user));\n    onLogin(user);\n  };\n\n  useEffect(() => {\n    const userData = localStorage.getItem('user');\n\n    if (!userData) {\n      return;\n    }\n\n    try {\n      const user = JSON.parse(userData) as User;\n\n      onLogin(user);\n    } catch (error) {\n      // Need to login\n    }\n  }, []);\n\n  const loadUser = async () => {\n    const user = await getUserByEmail(email);\n\n    if (user) {\n      saveUser(user);\n    } else {\n      setNeedToRegister(true);\n    }\n  };\n\n  const registerUser = () => {\n    return createUser({ name, email })\n      .then(saveUser);\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setErrorMessage('');\n    setLoading(true);\n\n    try {\n      if (needToRegister) {\n        await registerUser();\n      } else {\n        await loadUser();\n      }\n    } catch (error) {\n      setErrorMessage('Something went wrtong');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"box mt-5\">\n      <h1 className=\"title is-3\">\n        {needToRegister ? 'You need to register' : 'Log in to open todos'}\n      </h1>\n\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"user-email\">\n          Email\n        </label>\n\n        <div\n          className={classNames('control has-icons-left', {\n            'is-loading': loading,\n          })}\n        >\n          <input\n            type=\"email\"\n            id=\"user-email\"\n            className={classNames('input', {\n              'is-danger': !needToRegister && errorMessage,\n            })}\n            placeholder=\"Enter your email\"\n            disabled={loading || needToRegister}\n            value={email}\n            required\n            onChange={e => setEmail(e.target.value)}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n        </div>\n\n        {!needToRegister && errorMessage && (\n          <p className=\"help is-danger\">{errorMessage}</p>\n        )}\n      </div>\n\n      {needToRegister && (\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"user-name\">\n            Your Name\n          </label>\n\n          <div\n            className={classNames('control has-icons-left', {\n              'is-loading': loading,\n            })}\n          >\n            <input\n              type=\"text\"\n              id=\"user-name\"\n              className={classNames('input', {\n                'is-danger': needToRegister && errorMessage,\n              })}\n              placeholder=\"Enter your name\"\n              required\n              minLength={4}\n              disabled={loading}\n              value={name}\n              onChange={e => setName(e.target.value)}\n            />\n\n            <span className=\"icon is-small is-left\">\n              <i className=\"fas fa-user\" />\n            </span>\n          </div>\n\n          {needToRegister && errorMessage && (\n            <p className=\"help is-danger\">{errorMessage}</p>\n          )}\n        </div>\n      )}\n\n      <div className=\"field\">\n        <button\n          type=\"submit\"\n          className={classNames('button is-primary', {\n            'is-loading': loading,\n          })}\n        >\n          {needToRegister ? 'Register' : 'Login'}\n        </button>\n      </div>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport { User } from '../../types/User';\nimport { AuthForm } from './AuthForm';\n\nexport const AuthContext = React.createContext<User | null>(null);\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const AuthProvider: React.FC<Props> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  if (!user) {\n    return <AuthForm onLogin={setUser} />;\n  }\n\n  return (\n    <AuthContext.Provider value={user}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { SortType } from '../../types/SortType';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  sortType: SortType,\n  setSortType: CallableFunction,\n  clearComplited: CallableFunction,\n};\n\nexport const TodoFooter: React.FC<Props> = ({\n  todos,\n  sortType,\n  setSortType,\n  clearComplited,\n}) => {\n  const itemsLeft = useMemo(() => {\n    let counter = 0;\n\n    todos.forEach(todo => {\n      if (!todo.completed) {\n        counter += 1;\n      }\n    });\n\n    return counter;\n  }, [todos]);\n\n  return (\n    <footer className=\"todoapp__footer\" data-cy=\"Footer\">\n      <span className=\"todo-count\" data-cy=\"todosCounter\">\n        {`${itemsLeft} items left`}\n      </span>\n\n      <nav className=\"filter\" data-cy=\"Filter\">\n        <a\n          data-cy=\"FilterLinkAll\"\n          href=\"#/\"\n          className={classNames(\n            'filter__link',\n            { selected: sortType === SortType.default },\n          )}\n          onClick={() => (setSortType(SortType.default))}\n        >\n          All\n        </a>\n\n        <a\n          data-cy=\"FilterLinkActive\"\n          href=\"#/active\"\n          className={classNames(\n            'filter__link',\n            { selected: sortType === SortType.active },\n          )}\n          onClick={() => (setSortType(SortType.active))}\n        >\n          Active\n        </a>\n        <a\n          data-cy=\"FilterLinkCompleted\"\n          href=\"#/completed\"\n          className={classNames(\n            'filter__link',\n            { selected: sortType === SortType.completed },\n          )}\n          onClick={() => (setSortType(SortType.completed))}\n        >\n          Completed\n        </a>\n      </nav>\n      <button\n        data-cy=\"ClearCompletedButton\"\n        type=\"button\"\n        className=\"todoapp__clear-completed\"\n        onClick={() => (clearComplited())}\n        disabled={todos.length - itemsLeft === 0}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n","// eslint-disable-next-line no-shadow\nexport enum ErrorType {\n  noError,\n  whenEmptyTitle,\n  whenAddTodo,\n  whenDeleteTodo,\n  whenChangeStatus,\n  whenChangeTitle,\n}\n","import React, { useMemo } from 'react';\nimport { ErrorType } from '../../types/ErrorType';\n\ntype Props = {\n  currentError: ErrorType,\n  setCurrentError: CallableFunction,\n};\n\nexport const TodoError: React.FC<Props> = ({\n  currentError,\n  setCurrentError,\n}) => {\n  const closeErrorMsgHandler = () => {\n    setCurrentError(ErrorType.noError);\n  };\n\n  const errorMsg = useMemo(() => {\n    setTimeout(closeErrorMsgHandler, 3000);\n    switch (currentError) {\n      case ErrorType.whenEmptyTitle:\n        return 'Title can`t be empty';\n      case ErrorType.whenAddTodo:\n        return 'Unable to add a todo';\n      case ErrorType.whenDeleteTodo:\n        return 'Unable to delete a todo';\n      case ErrorType.whenChangeStatus:\n        return 'Unable to change the status';\n      case ErrorType.whenChangeTitle:\n        return 'Unable to change the title';\n      default:\n        return '';\n    }\n  }, [currentError]);\n\n  return (\n    <div\n      data-cy=\"ErrorNotification\"\n      className=\"notification is-danger is-light has-text-weight-normal\"\n    >\n      {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n      <button\n        data-cy=\"HideErrorButton\"\n        type=\"button\"\n        className=\"delete\"\n        onClick={() => (closeErrorMsgHandler())}\n      />\n      {errorMsg}\n    </div>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, {\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport classNames from 'classnames';\nimport {\n  addTodo,\n  changeTodoStatus,\n  changeTodoTitle,\n  deleteTodo,\n  getTodos,\n} from './api/todos';\nimport { AuthContext } from './components/Auth/AuthContext';\nimport { TodoFooter } from './components/TodoFooter/TodoFooter';\nimport { TodoError } from './components/TodoError/TodoError';\nimport { Todo } from './types/Todo';\nimport { SortType } from './types/SortType';\nimport { ErrorType } from './types/ErrorType';\n\nexport const App: React.FC = () => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const user = useContext(AuthContext);\n  const newTodoField = useRef<HTMLInputElement>(null);\n  const editField = useRef<HTMLInputElement>(null);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [inputText, setInputtext] = useState('');\n  // eslint-disable-next-line\n  const [loadingTodosId, setLoadingTodosId] = useState<number[]>([]);\n  // eslint-disable-next-line\n  const [isDoubleClicked, setIsDoubleCliked] = useState(false);\n  const [selectedTodoId, setSelectedTodoId] = useState<number>();\n  const [todoInputText, setTodoInputText] = useState<string>('');\n  const [currentSortType,\n    setCurrentSortType] = useState<SortType>(SortType.default);\n  // eslint-disable-next-line\n  const [currentError, setCurrentError] = useState<ErrorType>(ErrorType.noError);\n\n  useEffect(() => {\n    if (user) {\n      getTodos(user.id)\n        .then((newTodos) => setTodos(newTodos));\n    }\n  }, [user]);\n\n  const visibleTodos = useMemo(() => {\n    switch (currentSortType) {\n      case SortType.active:\n        return todos.filter(todo => !todo.completed);\n      case SortType.completed:\n        return todos.filter(todo => todo.completed);\n      default:\n        return [...todos];\n    }\n  }, [currentSortType, todos]);\n\n  const allTodosStatus = useMemo(() => {\n    return todos.some(todo => todo.completed === false);\n  }, [todos]);\n\n  const newTodoAddHandler = (event: React.FormEvent) => {\n    setCurrentError(ErrorType.noError);\n    event.preventDefault();\n    const id = Math.random();\n\n    if (inputText.trim().length === 0) {\n      setCurrentError(ErrorType.whenEmptyTitle);\n\n      return;\n    }\n\n    if (user) {\n      const newTodo: Todo = {\n        id,\n        userId: user.id,\n        title: inputText,\n        completed: false,\n      };\n\n      setLoadingTodosId(prev => [...prev, id]);\n      setTodos((currTodos) => [...currTodos, newTodo]);\n\n      addTodo(newTodo)\n        .then((returnedTodo: Todo) => {\n          setTodos((currtodos) => currtodos.map(todo => {\n            const prepTodo = { ...todo };\n\n            if (prepTodo.id === id) {\n              prepTodo.id = returnedTodo.id;\n            }\n\n            return prepTodo;\n          }));\n        })\n        .catch(() => {\n          setTodos(currTodos => currTodos.filter(todo => todo.id !== id));\n          setCurrentError(ErrorType.whenAddTodo);\n        })\n        .finally(() => (\n          setLoadingTodosId(prev => prev.filter(curr => curr !== newTodo.id))\n        ));\n    }\n\n    setInputtext('');\n  };\n\n  const changeTodoStatusHandler = (todo: Todo) => {\n    setCurrentError(ErrorType.noError);\n    setLoadingTodosId(todosId => [...todosId, todo.id]);\n\n    changeTodoStatus(todo)\n      .then((returnedTodo: Todo) => {\n        setTodos((currtodos) => currtodos.map(currTodo => {\n          const prepTodo = { ...currTodo };\n\n          if (prepTodo.id === returnedTodo.id) {\n            prepTodo.completed = returnedTodo.completed;\n          }\n\n          return prepTodo;\n        }));\n      })\n      .catch(() => (\n        setCurrentError(ErrorType.whenChangeStatus)\n      ))\n      .finally(() => (\n        setLoadingTodosId(todosId => todosId.filter(curr => curr !== todo.id))\n      ));\n  };\n\n  const deleteTodoHandler = (todo: Todo) => {\n    setCurrentError(ErrorType.noError);\n    setLoadingTodosId(todosId => [...todosId, todo.id]);\n\n    deleteTodo(todo)\n      .then(() => {\n        setTodos((currtodos) => currtodos.filter(currTodo => {\n          if (currTodo.id === todo.id) {\n            return false;\n          }\n\n          return true;\n        }));\n      })\n      .catch(() => (\n        setCurrentError(ErrorType.whenDeleteTodo)\n      ))\n      .finally(() => (\n        setLoadingTodosId(todosId => todosId.filter(curr => curr !== todo.id))\n      ));\n  };\n\n  const resetTodoEditPreferences = (key = 'Escape') => {\n    if (key === 'Escape') {\n      setIsDoubleCliked(false);\n      setSelectedTodoId(0);\n      setTodoInputText('');\n    }\n  };\n\n  const changeTodoTitleHandler = (event: React.FormEvent, todo: Todo) => {\n    setCurrentError(ErrorType.noError);\n    event.preventDefault();\n\n    if (todoInputText.length === 0) {\n      deleteTodoHandler(todo);\n    } else if (todoInputText !== todo.title) {\n      setLoadingTodosId(todosId => [...todosId, todo.id]);\n      changeTodoTitle(todo, todoInputText)\n        .then((returnedTodo: Todo) => {\n          setTodos((currTodos) => currTodos.map(currTodo => {\n            const prepTodo = { ...currTodo };\n\n            if (prepTodo.id === returnedTodo.id) {\n              prepTodo.title = returnedTodo.title;\n            }\n\n            return prepTodo;\n          }));\n        })\n        .catch(() => (\n          setCurrentError(ErrorType.whenChangeTitle)\n        ))\n        .finally(() => {\n          resetTodoEditPreferences();\n          setLoadingTodosId(todosId => (\n            todosId.filter(curr => curr !== todo.id)\n          ));\n        });\n    } else {\n      resetTodoEditPreferences();\n    }\n  };\n\n  const clearComplitedHandler = () => {\n    setCurrentError(ErrorType.noError);\n    todos.forEach(todo => {\n      if (todo.completed) {\n        deleteTodoHandler(todo);\n      }\n    });\n  };\n\n  const changeAllTodosStatus = () => {\n    if (allTodosStatus) {\n      todos.forEach(todo => {\n        if (todo.completed === false) {\n          changeTodoStatusHandler(todo);\n        }\n      });\n    } else {\n      todos.forEach(todo => changeTodoStatusHandler(todo));\n    }\n  };\n\n  useEffect(() => {\n    // focus the element with `ref={newTodoField}`\n    if (newTodoField.current) {\n      newTodoField.current.focus();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (editField.current) {\n      editField.current.focus();\n    }\n  }, [isDoubleClicked]);\n\n  return (\n    <div className=\"todoapp\">\n      <h1 className=\"todoapp__title\">todos</h1>\n\n      <div className=\"todoapp__content\">\n        <header className=\"todoapp__header\">\n          <button\n            data-cy=\"ToggleAllButton\"\n            type=\"button\"\n            className={classNames(\n              'todoapp__toggle-all',\n              { active: !allTodosStatus },\n            )}\n            onClick={() => (changeAllTodosStatus())}\n          />\n\n          <form\n            onSubmit={(event) => (newTodoAddHandler(event))}\n          >\n            <input\n              data-cy=\"NewTodoField\"\n              type=\"text\"\n              ref={newTodoField}\n              className=\"todoapp__new-todo\"\n              placeholder=\"What needs to be done?\"\n              value={inputText}\n              onChange={(event) => setInputtext(event.target.value)}\n            />\n          </form>\n        </header>\n\n        {todos && (\n          <section className=\"todoapp__main\" data-cy=\"TodoList\">\n            {visibleTodos.map(todo => (\n              <div\n                data-cy=\"Todo\"\n                className={classNames('todo', { completed: todo.completed })}\n                key={todo.id}\n              >\n                <label className=\"todo__status-label\">\n                  <input\n                    data-cy=\"TodoStatus\"\n                    type=\"checkbox\"\n                    className=\"todo__status\"\n                    checked\n                    onChange={() => (changeTodoStatusHandler(todo))}\n                  />\n                </label>\n                {selectedTodoId === todo.id\n                  ? (\n                    <form onSubmit={(event) => (\n                      changeTodoTitleHandler(event, todo))}\n                    >\n                      <input\n                        data-cy=\"TodoTitleField\"\n                        type=\"text\"\n                        className=\"todo__title-field\"\n                        placeholder=\"Empty todo will be deleted\"\n                        value={todoInputText}\n                        ref={editField}\n                        onChange={(event) => (\n                          setTodoInputText(event.target.value)\n                        )}\n                        onBlur={(event) => (\n                          changeTodoTitleHandler(event, todo)\n                        )}\n                        onKeyDown={(event) => (\n                          resetTodoEditPreferences(event.key)\n                        )}\n                      />\n                    </form>\n                  )\n                  : (\n                    <>\n                      <span\n                        data-cy=\"TodoTitle\"\n                        className=\"todo__title\"\n                        onDoubleClick={() => {\n                          setIsDoubleCliked(true);\n                          setSelectedTodoId(todo.id);\n                          setTodoInputText(todo.title);\n                        }}\n                      >\n                        {todo.title}\n                      </span>\n\n                      <button\n                        type=\"button\"\n                        className=\"todo__remove\"\n                        data-cy=\"TodoDeleteButton\"\n                        onClick={() => (deleteTodoHandler(todo))}\n                      >\n                        ×\n                      </button>\n                    </>\n                  )}\n\n                <div\n                  data-cy=\"TodoLoader\"\n                  className={classNames(\n                    'modal',\n                    'overlay',\n                    { 'is-active': loadingTodosId.includes(todo.id) },\n                  )}\n                >\n                  <div className=\"modal-background has-background-white-ter\" />\n                  <div className=\"loader\" />\n                </div>\n              </div>\n            ))}\n\n          </section>\n        )}\n\n        <TodoFooter\n          todos={todos}\n          sortType={currentSortType}\n          setSortType={setCurrentSortType}\n          clearComplited={clearComplitedHandler}\n        />\n\n      </div>\n      {currentError !== ErrorType.noError && (\n        <TodoError\n          currentError={currentError}\n          setCurrentError={setCurrentError}\n        />\n      )}\n    </div>\n  );\n};\n","import { Todo } from '../types/Todo';\nimport { client } from '../utils/fetchClient';\n\nexport const getTodos = (userId: number) => {\n  return client.get<Todo[]>(`/todos?userId=${userId}`);\n};\n\nexport const addTodo = (todo: Todo): Promise<Todo> => {\n  return client.post<Todo>('/todos', {\n    userId: todo.userId,\n    title: todo.title,\n    completed: todo.completed,\n  });\n};\n\nexport const changeTodoStatus = (todo: Todo): Promise<Todo> => {\n  return client.patch<Todo>(`/todos/${todo.id}`, { completed: !todo.completed });\n};\n\nexport const deleteTodo = (todo: Todo) => {\n  return client.delete(`/todos/${todo.id}`);\n};\n\nexport const changeTodoTitle = (todo: Todo, title:string): Promise<Todo> => {\n  return client.patch<Todo>(`/todos/${todo.id}`, { title });\n};\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './styles/index.scss';\n\nimport { App } from './App';\nimport { AuthProvider } from './components/Auth/AuthContext';\n\nconst Root = () => (\n  <AuthProvider>\n    <App />\n  </AuthProvider>\n);\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}